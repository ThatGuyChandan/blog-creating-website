exports.suggestSummary = (client, aiRateLimit) => async (req, res) => {
  const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
  const now = Date.now();
  if (aiRateLimit[ip] && now - aiRateLimit[ip] < 10000) {
    return res.status(429).json({ error: 'Too many requests. Please wait a few seconds.' });
  }
  aiRateLimit[ip] = now;
  const { content } = req.body;
  if (!content || content.length < 20) {
    return res.status(400).json({ error: 'Content too short for summary suggestion.' });
  }
  try {
    const prompt = `Return only a short summary (about 30 words) of the following content. No introduction, no prefix, no explanation. Respond with ONLY the summary text:\n\n${content}`;
    const response = await client.chatCompletion({
      provider: 'fireworks-ai',
      model: 'meta-llama/Llama-3.1-8B-Instruct',
      messages: [
        { role: 'user', content: prompt }
      ],
      max_tokens: 100
    });
    let summary = response.choices?.[0]?.message?.content?.trim() || '';
    summary = summary.replace(/^\s+|\s+$/g, '');
    if (!summary) {
      return res.status(500).json({ error: 'No summary generated by AI.' });
    }
    return res.json({ summary });
  } catch (err) {
    console.error('AI summary suggestion error:', err);
    return res.status(500).json({ error: 'Failed to generate summary.' });
  }
};

exports.suggestTitle = (client, aiRateLimit) => async (req, res) => {
  const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
  const now = Date.now();
  if (aiRateLimit[ip] && now - aiRateLimit[ip] < 10000) {
    return res.status(429).json({ error: 'Too many requests. Please wait a few seconds.' });
  }
  aiRateLimit[ip] = now;
  const { content } = req.body;
  if (!content || content.length < 20) {
    return res.status(400).json({ error: 'Content too short for title suggestion.' });
  }
  try {
    const prompt = `Return only a catchy blog post title (maximum 8 words) based on the following content. Do not explain, do not roleplay, do not prefix anything. Respond with ONLY the title. No \"AI Title\", no thinking, no commentary. Just the plain title:\n\n${content}`;
    const response = await client.chatCompletion({
      provider: 'fireworks-ai',
      model: 'meta-llama/Llama-3.1-8B-Instruct',
      messages: [
        { role: 'user', content: prompt }
      ],
      max_tokens: 24
    });
    let title = response.choices?.[0]?.message?.content?.trim() || '';
    title = title.split(/\s+/).slice(0, 8).join(' ').replace(/[.,;:!?-]+$/, '');
    if (!title) {
      return res.status(500).json({ error: 'No title generated by AI.' });
    }
    return res.json({ title });
  } catch (err) {
    console.error('AI title suggestion error:', err);
    return res.status(500).json({ error: 'Failed to generate title.' });
  }
}; 